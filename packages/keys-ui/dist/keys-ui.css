/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-amber-800: oklch(47.3% 0.137 46.201);
    --color-amber-900: oklch(41.4% 0.112 45.904);
    --color-amber-950: oklch(27.9% 0.077 45.635);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-900: oklch(42.1% 0.095 57.708);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-800: oklch(43.7% 0.078 188.216);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-800: oklch(43.8% 0.218 303.724);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-rose-100: oklch(94.1% 0.03 12.58);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-rose-950: oklch(27.1% 0.105 12.094);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-neutral-50: oklch(0.985 0.003 247.858);
    --color-neutral-100: oklch(0.961 0.008 247.839);
    --color-neutral-200: oklch(0.93 0.014 255.5);
    --color-neutral-300: oklch(0.875 0.02 252.87);
    --color-neutral-400: oklch(0.748 0.026 256.8);
    --color-neutral-500: oklch(0.646 0.03 256.85);
    --color-neutral-600: oklch(0.553 0.031 257.28);
    --color-neutral-700: oklch(0.478 0.03 259.67);
    --color-neutral-800: oklch(0.364 0.02 256.85);
    --color-neutral-900: oklch(0.272 0.014 261.29);
    --color-neutral-950: oklch(0.176 0.01 256.85);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --leading-relaxed: 1.625;
    --radius-sm: calc(var(--radius-base) * 0.25);
    --radius-md: calc(var(--radius-base) * 0.75);
    --radius-lg: var(--radius-base);
    --radius-xl: calc(var(--radius-base) * 1.5);
    --radius-2xl: calc(var(--radius-base) * 2);
    --radius-3xl: calc(var(--radius-base) * 3);
    --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.06), 0 1px 2px -1px rgba(0, 0, 0, 0.03);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.06), 0 4px 6px -4px rgba(0, 0, 0, 0.03);
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --radius-base: 0.5rem;
    --color-brand-50: oklch(0.98 0.013 70.64);
    --color-brand-100: oklch(0.95 0.04 70.1);
    --color-brand-200: oklch(0.895 0.081 69.29);
    --color-brand-300: oklch(0.827 0.129 67.69);
    --color-brand-400: oklch(0.754 0.172 65.72);
    --color-brand-500: oklch(0.705 0.19 62.83);
    --color-brand-600: oklch(0.633 0.179 56.24);
    --color-brand-700: oklch(0.525 0.148 50.75);
    --color-brand-800: oklch(0.432 0.119 48.56);
    --color-brand-900: oklch(0.367 0.098 49.72);
    --color-brand-950: oklch(0.199 0.053 52.01);
    --color-danger-50: oklch(0.971 0.013 17.38);
    --color-danger-100: oklch(0.936 0.032 17.717);
    --color-danger-200: oklch(0.885 0.062 18.334);
    --color-danger-300: oklch(0.808 0.109 19.571);
    --color-danger-400: oklch(0.704 0.156 22.216);
    --color-danger-500: oklch(0.628 0.181 25.331);
    --color-danger-600: oklch(0.569 0.186 27.325);
    --color-danger-700: oklch(0.478 0.155 27.933);
    --color-danger-900: oklch(0.350 0.1 26.533);
    --color-warning-50: oklch(0.988 0.016 85.87);
    --color-warning-100: oklch(0.969 0.043 85.87);
    --color-warning-200: oklch(0.931 0.087 85.87);
    --color-warning-300: oklch(0.88 0.138 85.87);
    --color-warning-400: oklch(0.812 0.177 85.87);
    --color-warning-500: oklch(0.749 0.184 85.87);
    --color-warning-600: oklch(0.676 0.173 73.34);
    --color-warning-700: oklch(0.565 0.144 67.69);
    --color-warning-900: oklch(0.385 0.094 67.69);
    --color-success-50: oklch(0.985 0.013 142.5);
    --color-success-100: oklch(0.961 0.034 142.5);
    --color-success-200: oklch(0.925 0.067 142.5);
    --color-success-300: oklch(0.873 0.108 142.5);
    --color-success-400: oklch(0.798 0.147 142.5);
    --color-success-500: oklch(0.726 0.171 142.5);
    --color-success-600: oklch(0.647 0.169 142.5);
    --color-success-700: oklch(0.542 0.145 142.5);
    --color-success-900: oklch(0.373 0.094 142.5);
    --color-info-50: oklch(0.985 0.013 240.75);
    --color-info-100: oklch(0.961 0.034 240.75);
    --color-info-200: oklch(0.925 0.067 240.75);
    --color-info-300: oklch(0.873 0.108 240.75);
    --color-info-400: oklch(0.798 0.147 240.75);
    --color-info-500: oklch(0.726 0.171 240.75);
    --color-info-600: oklch(0.647 0.169 240.75);
    --color-info-700: oklch(0.542 0.145 240.75);
    --color-info-900: oklch(0.373 0.094 240.75);
    --color-surface: var(--surface);
    --color-body: var(--body);
    --color-foreground: var(--foreground);
    --color-border: var(--border);
    --color-input: var(--input);
    --color-brand: var(--brand);
    --color-brand-hover: var(--brand-hover);
    --color-foreground-brand: var(--foreground-brand);
    --color-danger: var(--danger);
    --color-warning: var(--warning);
    --color-success: var(--success);
    --color-foreground-success: var(--foreground-success);
    --color-neutral: var(--neutral);
    --color-neutral-hover: var(--neutral-hover);
    --color-muted: var(--muted);
  }
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
      -o-tab-size: 4;
         tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-moz-placeholder {
    opacity: 1;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::-moz-placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    -webkit-appearance: button;
       -moz-appearance: button;
            appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .start-2\.5 {
    inset-inline-start: calc(var(--spacing) * 2.5);
  }
  .start-3 {
    inset-inline-start: calc(var(--spacing) * 3);
  }
  .start-3\.5 {
    inset-inline-start: calc(var(--spacing) * 3.5);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .end-2\.5 {
    inset-inline-end: calc(var(--spacing) * 2.5);
  }
  .end-3 {
    inset-inline-end: calc(var(--spacing) * 3);
  }
  .end-3\.5 {
    inset-inline-end: calc(var(--spacing) * 3.5);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-\[-1px\] {
    top: -1px;
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-2\.5 {
    right: calc(var(--spacing) * 2.5);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-3\.5 {
    right: calc(var(--spacing) * 3.5);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-full {
    right: 100%;
  }
  .-bottom-0\.5 {
    bottom: calc(var(--spacing) * -0.5);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-full {
    bottom: 100%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-2 {
    left: calc(var(--spacing) * 2);
  }
  .left-2\.5 {
    left: calc(var(--spacing) * 2.5);
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .left-3\.5 {
    left: calc(var(--spacing) * 3.5);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-full {
    left: 100%;
  }
  .isolate {
    isolation: isolate;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .float-left {
    float: left;
  }
  .float-right {
    float: right;
  }
  .clear-left {
    clear: left;
  }
  .clear-right {
    clear: right;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-auto {
    margin: auto;
  }
  .mx-0\.5 {
    margin-inline: calc(var(--spacing) * 0.5);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .-mt-5 {
    margin-top: calc(var(--spacing) * -5);
  }
  .-mt-px {
    margin-top: -1px;
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .mr-auto {
    margin-right: auto;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .-ml-px {
    margin-left: -1px;
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .ml-12 {
    margin-left: calc(var(--spacing) * 12);
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-table {
    display: inline-table;
  }
  .list-item {
    display: list-item;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .table-column {
    display: table-column;
  }
  .table-column-group {
    display: table-column-group;
  }
  .table-footer-group {
    display: table-footer-group;
  }
  .table-header-group {
    display: table-header-group;
  }
  .table-row {
    display: table-row;
  }
  .table-row-group {
    display: table-row-group;
  }
  .aspect-\[4\/3\] {
    aspect-ratio: 4/3;
  }
  .aspect-\[21\/9\] {
    aspect-ratio: 21/9;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .aspect-video {
    aspect-ratio: var(--aspect-video);
  }
  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-\[18px\] {
    height: 18px;
  }
  .h-\[56px\] {
    height: 56px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: -moz-max-content;
    height: max-content;
  }
  .h-px {
    height: 1px;
  }
  .max-h-48 {
    max-height: calc(var(--spacing) * 48);
  }
  .max-h-64 {
    max-height: calc(var(--spacing) * 64);
  }
  .max-h-\[80vh\] {
    max-height: 80vh;
  }
  .max-h-full {
    max-height: 100%;
  }
  .max-h-none {
    max-height: none;
  }
  .min-h-24 {
    min-height: calc(var(--spacing) * 24);
  }
  .min-h-32 {
    min-height: calc(var(--spacing) * 32);
  }
  .min-h-40 {
    min-height: calc(var(--spacing) * 40);
  }
  .min-h-dvh {
    min-height: 100dvh;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-\[18px\] {
    width: 18px;
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: -moz-max-content;
    width: max-content;
  }
  .w-px {
    width: 1px;
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-20 {
    max-width: calc(var(--spacing) * 20);
  }
  .max-w-32 {
    max-width: calc(var(--spacing) * 32);
  }
  .max-w-150 {
    max-width: calc(var(--spacing) * 150);
  }
  .max-w-\[320px\] {
    max-width: 320px;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-5 {
    min-width: calc(var(--spacing) * 5);
  }
  .min-w-6 {
    min-width: calc(var(--spacing) * 6);
  }
  .min-w-40 {
    min-width: calc(var(--spacing) * 40);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-56 {
    min-width: calc(var(--spacing) * 56);
  }
  .min-w-\[280px\] {
    min-width: 280px;
  }
  .min-w-\[560px\] {
    min-width: 560px;
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-left {
    transform-origin: left;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-90 {
    --tw-scale-x: 90%;
    --tw-scale-y: 90%;
    --tw-scale-z: 90%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-110 {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-x-0 {
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform\! {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,) !important;
  }
  .animate-bounce {
    animation: var(--animate-bounce);
  }
  .animate-ping {
    animation: var(--animate-ping);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-not-allowed\! {
    cursor: not-allowed !important;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-x {
    resize: horizontal;
  }
  .resize-y {
    resize: vertical;
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .\[appearance\:textfield\] {
    -webkit-appearance: textfield;
       -moz-appearance: textfield;
            appearance: textfield;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-evenly {
    justify-content: space-evenly;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .space-y-0 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .-space-x-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -0.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -0.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-1\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -1.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -1.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-2\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .-space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-border {
    :where(& > :not(:last-child)) {
      border-color: var(--border);
    }
  }
  .divide-neutral-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral-200);
    }
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-t-none {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  .rounded-l-md {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
  .rounded-l-none {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  .rounded-r-md {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
  .rounded-r-none {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-b-none {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-t-8 {
    border-top-style: var(--tw-border-style);
    border-top-width: 8px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .border-l-8 {
    border-left-style: var(--tw-border-style);
    border-left-width: 8px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-border {
    border-color: var(--border);
  }
  .border-brand {
    border-color: var(--brand);
  }
  .border-brand-500 {
    border-color: var(--color-brand-500);
  }
  .border-brand\/20 {
    border-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--brand) 20%, transparent);
    }
  }
  .border-danger {
    border-color: var(--danger);
  }
  .border-danger-200 {
    border-color: var(--color-danger-200);
  }
  .border-danger\/20 {
    border-color: var(--danger);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--danger) 20%, transparent);
    }
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-green-500 {
    border-color: var(--color-green-500);
  }
  .border-indigo-500 {
    border-color: var(--color-indigo-500);
  }
  .border-info-200 {
    border-color: var(--color-info-200);
  }
  .border-info\/20 {
    border-color: var(--info);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--info) 20%, transparent);
    }
  }
  .border-neutral {
    border-color: var(--neutral);
  }
  .border-neutral-100 {
    border-color: var(--color-neutral-100);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-neutral-400 {
    border-color: var(--color-neutral-400);
  }
  .border-neutral-700 {
    border-color: var(--color-neutral-700);
  }
  .border-neutral\/20 {
    border-color: var(--neutral);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--neutral) 20%, transparent);
    }
  }
  .border-pink-500 {
    border-color: var(--color-pink-500);
  }
  .border-purple-500 {
    border-color: var(--color-purple-500);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .border-success {
    border-color: var(--success);
  }
  .border-success-200 {
    border-color: var(--color-success-200);
  }
  .border-success\/20 {
    border-color: var(--success);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--success) 20%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-warning {
    border-color: var(--warning);
  }
  .border-warning-200 {
    border-color: var(--color-warning-200);
  }
  .border-warning\/20 {
    border-color: var(--warning);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--warning) 20%, transparent);
    }
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-amber-500\/10 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 10%, transparent);
    }
  }
  .bg-amber-500\/20 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
    }
  }
  .bg-amber-500\/30 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 30%, transparent);
    }
  }
  .bg-amber-500\/40 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 40%, transparent);
    }
  }
  .bg-amber-500\/50 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 50%, transparent);
    }
  }
  .bg-amber-500\/60 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 60%, transparent);
    }
  }
  .bg-amber-500\/70 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 70%, transparent);
    }
  }
  .bg-amber-500\/80 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
  }
  .bg-amber-500\/90 {
    background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-amber-500) 90%, transparent);
    }
  }
  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }
  .bg-black\/8 {
    background-color: color-mix(in srgb, #000 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 8%, transparent);
    }
  }
  .bg-black\/10 {
    background-color: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .bg-black\/20 {
    background-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-black\/40 {
    background-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-black\/60 {
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .bg-black\/70 {
    background-color: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }
  .bg-black\/80 {
    background-color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .bg-black\/90 {
    background-color: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/10 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-600\/10 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 10%, transparent);
    }
  }
  .bg-blue-600\/20 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 20%, transparent);
    }
  }
  .bg-blue-600\/30 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 30%, transparent);
    }
  }
  .bg-blue-600\/40 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 40%, transparent);
    }
  }
  .bg-blue-600\/50 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
    }
  }
  .bg-blue-600\/60 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 60%, transparent);
    }
  }
  .bg-blue-600\/70 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 70%, transparent);
    }
  }
  .bg-blue-600\/80 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 80%, transparent);
    }
  }
  .bg-blue-600\/90 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 90%, transparent);
    }
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-body {
    background-color: var(--body);
  }
  .bg-border {
    background-color: var(--border);
  }
  .bg-brand {
    background-color: var(--brand);
  }
  .bg-brand-50 {
    background-color: var(--color-brand-50);
  }
  .bg-brand-100 {
    background-color: var(--color-brand-100);
  }
  .bg-brand\/5 {
    background-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--brand) 5%, transparent);
    }
  }
  .bg-brand\/10 {
    background-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--brand) 10%, transparent);
    }
  }
  .bg-current {
    background-color: currentcolor;
  }
  .bg-danger {
    background-color: var(--danger);
  }
  .bg-danger-100 {
    background-color: var(--color-danger-100);
  }
  .bg-danger\/5 {
    background-color: var(--danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--danger) 5%, transparent);
    }
  }
  .bg-danger\/10 {
    background-color: var(--danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--danger) 10%, transparent);
    }
  }
  .bg-emerald-200 {
    background-color: var(--color-emerald-200);
  }
  .bg-emerald-600 {
    background-color: var(--color-emerald-600);
  }
  .bg-emerald-600\/10 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 10%, transparent);
    }
  }
  .bg-emerald-600\/20 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 20%, transparent);
    }
  }
  .bg-emerald-600\/30 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 30%, transparent);
    }
  }
  .bg-emerald-600\/40 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 40%, transparent);
    }
  }
  .bg-emerald-600\/50 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 50%, transparent);
    }
  }
  .bg-emerald-600\/60 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 60%, transparent);
    }
  }
  .bg-emerald-600\/70 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 70%, transparent);
    }
  }
  .bg-emerald-600\/80 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 80%, transparent);
    }
  }
  .bg-emerald-600\/90 {
    background-color: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-600\/10 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 10%, transparent);
    }
  }
  .bg-gray-600\/20 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 20%, transparent);
    }
  }
  .bg-gray-600\/30 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 30%, transparent);
    }
  }
  .bg-gray-600\/40 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 40%, transparent);
    }
  }
  .bg-gray-600\/50 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 50%, transparent);
    }
  }
  .bg-gray-600\/60 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 60%, transparent);
    }
  }
  .bg-gray-600\/70 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 70%, transparent);
    }
  }
  .bg-gray-600\/80 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 80%, transparent);
    }
  }
  .bg-gray-600\/90 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-gray-600) 90%, transparent);
    }
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-300 {
    background-color: var(--color-green-300);
  }
  .bg-green-400 {
    background-color: var(--color-green-400);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\/10 {
    background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
    }
  }
  .bg-indigo-500\/10 {
    background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
    }
  }
  .bg-info {
    background-color: var(--info);
  }
  .bg-info-100 {
    background-color: var(--color-info-100);
  }
  .bg-info\/5 {
    background-color: var(--info);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--info) 5%, transparent);
    }
  }
  .bg-input {
    background-color: var(--input);
  }
  .bg-neutral {
    background-color: var(--neutral);
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-400 {
    background-color: var(--color-neutral-400);
  }
  .bg-neutral-500\/10 {
    background-color: color-mix(in srgb, oklch(0.646 0.03 256.85) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-500) 10%, transparent);
    }
  }
  .bg-neutral-600 {
    background-color: var(--color-neutral-600);
  }
  .bg-neutral-900 {
    background-color: var(--color-neutral-900);
  }
  .bg-neutral\/5 {
    background-color: var(--neutral);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--neutral) 5%, transparent);
    }
  }
  .bg-neutral\/10 {
    background-color: var(--neutral);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--neutral) 10%, transparent);
    }
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-pink-500\/10 {
    background-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-purple-500\/10 {
    background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-400 {
    background-color: var(--color-red-400);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/10 {
    background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
  }
  .bg-red-600\/10 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 10%, transparent);
    }
  }
  .bg-red-600\/20 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 20%, transparent);
    }
  }
  .bg-red-600\/30 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 30%, transparent);
    }
  }
  .bg-red-600\/40 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 40%, transparent);
    }
  }
  .bg-red-600\/50 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 50%, transparent);
    }
  }
  .bg-red-600\/60 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 60%, transparent);
    }
  }
  .bg-red-600\/70 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 70%, transparent);
    }
  }
  .bg-red-600\/80 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 80%, transparent);
    }
  }
  .bg-red-600\/90 {
    background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-red-600) 90%, transparent);
    }
  }
  .bg-rose-200 {
    background-color: var(--color-rose-200);
  }
  .bg-rose-200\! {
    background-color: var(--color-rose-200) !important;
  }
  .bg-rose-500 {
    background-color: var(--color-rose-500);
  }
  .bg-rose-600 {
    background-color: var(--color-rose-600);
  }
  .bg-success {
    background-color: var(--success);
  }
  .bg-success-100 {
    background-color: var(--color-success-100);
  }
  .bg-success\/5 {
    background-color: var(--success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--success) 5%, transparent);
    }
  }
  .bg-success\/10 {
    background-color: var(--success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--success) 10%, transparent);
    }
  }
  .bg-surface {
    background-color: var(--surface);
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-transparent\! {
    background-color: transparent !important;
  }
  .bg-warning {
    background-color: var(--warning);
  }
  .bg-warning-100 {
    background-color: var(--color-warning-100);
  }
  .bg-warning\/5 {
    background-color: var(--warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--warning) 5%, transparent);
    }
  }
  .bg-warning\/10 {
    background-color: var(--warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--warning) 10%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/5 {
    background-color: color-mix(in srgb, #fff 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-white\/40 {
    background-color: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-white\/80 {
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .bg-white\/90 {
    background-color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .bg-white\/\[2\%\] {
    background-color: color-mix(in srgb, #fff 2%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
    }
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-yellow-400 {
    background-color: var(--color-yellow-400);
  }
  .bg-yellow-500\/10 {
    background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-amber-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-amber-500\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(76.9% 0.188 70.08) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/10 {
    --tw-gradient-from: color-mix(in srgb, #000 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/20 {
    --tw-gradient-from: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/30 {
    --tw-gradient-from: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/40 {
    --tw-gradient-from: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/50 {
    --tw-gradient-from: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/60 {
    --tw-gradient-from: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/70 {
    --tw-gradient-from: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/80 {
    --tw-gradient-from: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/90 {
    --tw-gradient-from: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-blue-600\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(54.6% 0.245 262.881) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-brand-500 {
    --tw-gradient-from: var(--color-brand-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-emerald-600\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(59.6% 0.145 163.225) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-600) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-600\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(44.6% 0.03 256.802) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-600) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-700\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(37.3% 0.034 259.733) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-pink-500 {
    --tw-gradient-from: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-500 {
    --tw-gradient-from: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/60 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/70 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-red-600\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(57.7% 0.245 27.325) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-600) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/10 {
    --tw-gradient-from: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/20 {
    --tw-gradient-from: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/30 {
    --tw-gradient-from: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/40 {
    --tw-gradient-from: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/50 {
    --tw-gradient-from: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/60 {
    --tw-gradient-from: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/70 {
    --tw-gradient-from: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/80 {
    --tw-gradient-from: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/90 {
    --tw-gradient-from: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-yellow-500 {
    --tw-gradient-from: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-blue-500 {
    --tw-gradient-via: var(--color-blue-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-border {
    --tw-gradient-via: var(--border);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-brand {
    --tw-gradient-via: var(--brand);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-danger {
    --tw-gradient-via: var(--danger);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-green-500 {
    --tw-gradient-via: var(--color-green-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-indigo-500 {
    --tw-gradient-via: var(--color-indigo-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-neutral-400 {
    --tw-gradient-via: var(--color-neutral-400);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-pink-500 {
    --tw-gradient-via: var(--color-pink-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-500 {
    --tw-gradient-via: var(--color-purple-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-red-500 {
    --tw-gradient-via: var(--color-red-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-success {
    --tw-gradient-via: var(--success);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-warning {
    --tw-gradient-via: var(--warning);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-yellow-500 {
    --tw-gradient-via: var(--color-yellow-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-brand-600 {
    --tw-gradient-to: var(--color-brand-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-cyan-600 {
    --tw-gradient-to: var(--color-cyan-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-emerald-600 {
    --tw-gradient-to: var(--color-emerald-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-indigo-600 {
    --tw-gradient-to: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-orange-600 {
    --tw-gradient-to: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-pink-600 {
    --tw-gradient-to: var(--color-pink-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-rose-600 {
    --tw-gradient-to: var(--color-rose-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-yellow-500 {
    --tw-gradient-to: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-clip-text {
    -webkit-background-clip: text;
            background-clip: text;
  }
  .object-contain {
    -o-object-fit: contain;
       object-fit: contain;
  }
  .object-cover {
    -o-object-fit: cover;
       object-fit: cover;
  }
  .object-fill {
    -o-object-fit: fill;
       object-fit: fill;
  }
  .object-none {
    -o-object-fit: none;
       object-fit: none;
  }
  .object-scale-down {
    -o-object-fit: scale-down;
       object-fit: scale-down;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-\[6px\] {
    padding-inline: 6px;
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pr-12 {
    padding-right: calc(var(--spacing) * 12);
  }
  .pr-14 {
    padding-right: calc(var(--spacing) * 14);
  }
  .pr-16 {
    padding-right: calc(var(--spacing) * 16);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-xs\/none {
    font-size: var(--text-xs);
    line-height: 1;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .leading-3 {
    --tw-leading: calc(var(--spacing) * 3);
    line-height: calc(var(--spacing) * 3);
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-7 {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .break-all {
    word-break: break-all;
  }
  .whitespace-normal {
    white-space: normal;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-amber-900 {
    color: var(--color-amber-900);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-900 {
    color: var(--color-blue-900);
  }
  .text-brand {
    color: var(--brand);
  }
  .text-brand-400 {
    color: var(--color-brand-400);
  }
  .text-brand-600 {
    color: var(--color-brand-600);
  }
  .text-brand-700 {
    color: var(--color-brand-700);
  }
  .text-brand-800 {
    color: var(--color-brand-800);
  }
  .text-danger {
    color: var(--danger);
  }
  .text-danger-400 {
    color: var(--color-danger-400);
  }
  .text-danger-600 {
    color: var(--color-danger-600);
  }
  .text-emerald-500 {
    color: var(--color-emerald-500);
  }
  .text-emerald-900 {
    color: var(--color-emerald-900);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-foreground-brand {
    color: var(--foreground-brand);
  }
  .text-foreground-danger {
    color: var(--foreground-danger);
  }
  .text-foreground-info {
    color: var(--foreground-info);
  }
  .text-foreground-neutral {
    color: var(--foreground-neutral);
  }
  .text-foreground-success {
    color: var(--foreground-success);
  }
  .text-foreground-warning {
    color: var(--foreground-warning);
  }
  .text-foreground\/60 {
    color: var(--foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--foreground) 60%, transparent);
    }
  }
  .text-foreground\/70 {
    color: var(--foreground);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--foreground) 70%, transparent);
    }
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-indigo-500 {
    color: var(--color-indigo-500);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-info {
    color: var(--info);
  }
  .text-info-600 {
    color: var(--color-info-600);
  }
  .text-muted {
    color: var(--muted);
  }
  .text-muted\/50 {
    color: var(--muted);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }
  .text-neutral {
    color: var(--neutral);
  }
  .text-neutral-100 {
    color: var(--color-neutral-100);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-500\! {
    color: var(--color-neutral-500) !important;
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-neutral-950 {
    color: var(--color-neutral-950);
  }
  .text-pink-500 {
    color: var(--color-pink-500);
  }
  .text-pink-600 {
    color: var(--color-pink-600);
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-purple-600 {
    color: var(--color-purple-600);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-rose-900 {
    color: var(--color-rose-900);
  }
  .text-success {
    color: var(--success);
  }
  .text-success-400 {
    color: var(--color-success-400);
  }
  .text-success-600 {
    color: var(--color-success-600);
  }
  .text-transparent {
    color: transparent;
  }
  .text-warning {
    color: var(--warning);
  }
  .text-warning-400 {
    color: var(--color-warning-400);
  }
  .text-warning-600 {
    color: var(--color-warning-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/80 {
    color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-600 {
    color: var(--color-yellow-600);
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .text-yellow-800 {
    color: var(--color-yellow-800);
  }
  .text-yellow-900 {
    color: var(--color-yellow-900);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .diagonal-fractions {
    --tw-numeric-fraction: diagonal-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .lining-nums {
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .oldstyle-nums {
    --tw-numeric-figure: oldstyle-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .proportional-nums {
    --tw-numeric-spacing: proportional-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .slashed-zero {
    --tw-slashed-zero: slashed-zero;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .stacked-fractions {
    --tw-numeric-fraction: stacked-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-neutral-400 {
    text-decoration-color: var(--color-neutral-400);
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-40 {
    opacity: 40%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgba(0, 0, 0, 0.08));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.05)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, 0.025));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.02));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-gray-500\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(55.1% 0.027 264.364) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-gray-500) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-brand {
    --tw-ring-color: var(--brand);
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .ring-offset-2 {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter\! {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,) !important;
  }
  .backdrop-filter {
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-all {
    -webkit-user-select: all;
    -moz-user-select: all;
         user-select: all;
  }
  .select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
         user-select: none;
  }
  .group-open\:rotate-180 {
    &:is(:where(.group):is([open], :popover-open, :open) *) {
      rotate: 180deg;
    }
  }
  .group-hover\:text-blue-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .group-hover\:text-brand {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--brand);
      }
    }
  }
  .group-hover\:text-foreground {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-focus-visible\:text-brand {
    &:is(:where(.group):focus-visible *) {
      color: var(--brand);
    }
  }
  .group-\[\.status-down\]\:bg-red-600 {
    &:is(:where(.group):is(.status-down) *) {
      background-color: var(--color-red-600);
    }
  }
  .peer-checked\:bg-brand {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--brand);
    }
  }
  .peer-checked\:bg-danger {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--danger);
    }
  }
  .peer-checked\:bg-green-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-green-600);
    }
  }
  .peer-checked\:bg-neutral {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--neutral);
    }
  }
  .peer-checked\:bg-orange-500 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-orange-500);
    }
  }
  .peer-checked\:bg-purple-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-purple-600);
    }
  }
  .peer-checked\:bg-red-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-red-600);
    }
  }
  .peer-checked\:bg-success {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--success);
    }
  }
  .peer-checked\:bg-teal-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-teal-600);
    }
  }
  .peer-checked\:bg-warning {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--warning);
    }
  }
  .peer-checked\:bg-yellow-400 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-yellow-400);
    }
  }
  .peer-focus\:ring-4 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-focus\:ring-brand\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--brand);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--brand) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-danger\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--danger);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--danger) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-green-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-green-300);
    }
  }
  .peer-focus\:ring-neutral\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--neutral);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--neutral) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-orange-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-orange-300);
    }
  }
  .peer-focus\:ring-purple-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-purple-300);
    }
  }
  .peer-focus\:ring-red-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-red-300);
    }
  }
  .peer-focus\:ring-success\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--success);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--success) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-teal-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-teal-300);
    }
  }
  .peer-focus\:ring-warning\/30 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--warning);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--warning) 30%, transparent);
      }
    }
  }
  .peer-focus\:ring-yellow-300 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-yellow-300);
    }
  }
  .selection\:bg-red-500 {
    & *::-moz-selection {
      background-color: var(--color-red-500);
    }
    & *::selection {
      background-color: var(--color-red-500);
    }
    &::-moz-selection {
      background-color: var(--color-red-500);
    }
    &::selection {
      background-color: var(--color-red-500);
    }
  }
  .selection\:text-white {
    & *::-moz-selection {
      color: var(--color-white);
    }
    & *::selection {
      color: var(--color-white);
    }
    &::-moz-selection {
      color: var(--color-white);
    }
    &::selection {
      color: var(--color-white);
    }
  }
  .backdrop\:bg-black {
    &::backdrop {
      background-color: var(--color-black);
    }
  }
  .backdrop\:backdrop-blur-sm {
    &::backdrop {
      --tw-backdrop-blur: blur(var(--blur-sm));
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:start-\[2px\] {
    &::after {
      content: var(--tw-content);
      inset-inline-start: 2px;
    }
  }
  .after\:top-\[2px\] {
    &::after {
      content: var(--tw-content);
      top: 2px;
    }
  }
  .after\:h-4 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 4);
    }
  }
  .after\:h-5 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 5);
    }
  }
  .after\:h-6 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 6);
    }
  }
  .after\:w-4 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 4);
    }
  }
  .after\:w-5 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 5);
    }
  }
  .after\:w-6 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 6);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:border {
    &::after {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .after\:border-neutral-300 {
    &::after {
      content: var(--tw-content);
      border-color: var(--color-neutral-300);
    }
  }
  .after\:bg-white {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .after\:transition-all {
    &::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:content-\[\'\'\] {
    &::after {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .peer-checked\:after\:translate-x-4 {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .peer-checked\:after\:translate-x-5 {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .peer-checked\:after\:translate-x-7 {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 7);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .peer-checked\:after\:border-white {
    &:is(:where(.peer):checked ~ *) {
      &::after {
        content: var(--tw-content);
        border-color: var(--color-white);
      }
    }
  }
  .focus-within\:border-brand {
    &:focus-within {
      border-color: var(--brand);
    }
  }
  .focus-within\:bg-brand\/5 {
    &:focus-within {
      background-color: var(--brand);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--brand) 5%, transparent);
      }
    }
  }
  .hover\:-translate-y-0\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:border-border {
    &:hover {
      @media (hover: hover) {
        border-color: var(--border);
      }
    }
  }
  .hover\:border-brand {
    &:hover {
      @media (hover: hover) {
        border-color: var(--brand);
      }
    }
  }
  .hover\:border-brand-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-brand-500);
      }
    }
  }
  .hover\:border-danger {
    &:hover {
      @media (hover: hover) {
        border-color: var(--danger);
      }
    }
  }
  .hover\:border-neutral {
    &:hover {
      @media (hover: hover) {
        border-color: var(--neutral);
      }
    }
  }
  .hover\:border-neutral-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-300);
      }
    }
  }
  .hover\:border-neutral-400 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-400);
      }
    }
  }
  .hover\:border-success {
    &:hover {
      @media (hover: hover) {
        border-color: var(--success);
      }
    }
  }
  .hover\:border-warning {
    &:hover {
      @media (hover: hover) {
        border-color: var(--warning);
      }
    }
  }
  .hover\:bg-black\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-black\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-blue-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-body {
    &:hover {
      @media (hover: hover) {
        background-color: var(--body);
      }
    }
  }
  .hover\:bg-border {
    &:hover {
      @media (hover: hover) {
        background-color: var(--border);
      }
    }
  }
  .hover\:bg-brand-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-brand-50);
      }
    }
  }
  .hover\:bg-brand-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--brand-hover);
      }
    }
  }
  .hover\:bg-brand\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--brand);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--brand) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-brand\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--brand);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--brand) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-brand\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--brand);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--brand) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-current {
    &:hover {
      @media (hover: hover) {
        background-color: currentcolor;
      }
    }
  }
  .hover\:bg-danger {
    &:hover {
      @media (hover: hover) {
        background-color: var(--danger);
      }
    }
  }
  .hover\:bg-danger-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger-50);
      }
    }
  }
  .hover\:bg-danger-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--danger-hover);
      }
    }
  }
  .hover\:bg-danger\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--danger) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-danger\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--danger) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-danger\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--danger) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-green-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-indigo-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-info-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-info-50);
      }
    }
  }
  .hover\:bg-info-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--info-hover);
      }
    }
  }
  .hover\:bg-neutral-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .hover\:bg-neutral-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .hover\:bg-neutral-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(0.646 0.03 256.85) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--neutral-hover);
      }
    }
  }
  .hover\:bg-neutral\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--neutral) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--neutral);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--neutral) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-pink-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-purple-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-success-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success-50);
      }
    }
  }
  .hover\:bg-success-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--success-hover);
      }
    }
  }
  .hover\:bg-success\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--success) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-success\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--success) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-success\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--success) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-surface {
    &:hover {
      @media (hover: hover) {
        background-color: var(--surface);
      }
    }
  }
  .hover\:bg-surface\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--surface);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--surface) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-warning-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning-50);
      }
    }
  }
  .hover\:bg-warning-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--warning-hover);
      }
    }
  }
  .hover\:bg-warning\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--warning) 5%, transparent);
        }
      }
    }
  }
  .hover\:bg-warning\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--warning) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-warning\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--warning) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-yellow-500\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:text-brand {
    &:hover {
      @media (hover: hover) {
        color: var(--brand);
      }
    }
  }
  .hover\:text-brand-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-brand-700);
      }
    }
  }
  .hover\:text-brand-hover {
    &:hover {
      @media (hover: hover) {
        color: var(--brand-hover);
      }
    }
  }
  .hover\:text-danger {
    &:hover {
      @media (hover: hover) {
        color: var(--danger);
      }
    }
  }
  .hover\:text-danger-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger-500);
      }
    }
  }
  .hover\:text-danger-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger-700);
      }
    }
  }
  .hover\:text-danger-hover {
    &:hover {
      @media (hover: hover) {
        color: var(--danger-hover);
      }
    }
  }
  .hover\:text-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
  }
  .hover\:text-gray-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-400);
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-info-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-info-700);
      }
    }
  }
  .hover\:text-neutral-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-600);
      }
    }
  }
  .hover\:text-neutral-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-900);
      }
    }
  }
  .hover\:text-success-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-success-700);
      }
    }
  }
  .hover\:text-warning-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning-700);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.05)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, 0.025));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-sm {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:z-10 {
    &:focus {
      z-index: 10;
    }
  }
  .focus\:border-blue-300 {
    &:focus {
      border-color: var(--color-blue-300);
    }
  }
  .focus\:border-brand {
    &:focus {
      border-color: var(--brand);
    }
  }
  .focus\:border-danger {
    &:focus {
      border-color: var(--danger);
    }
  }
  .focus\:bg-brand {
    &:focus {
      background-color: var(--brand);
    }
  }
  .focus\:bg-neutral-100 {
    &:focus {
      background-color: var(--color-neutral-100);
    }
  }
  .focus\:text-brand {
    &:focus {
      color: var(--brand);
    }
  }
  .focus\:text-danger {
    &:focus {
      color: var(--danger);
    }
  }
  .focus\:text-foreground-brand {
    &:focus {
      color: var(--foreground-brand);
    }
  }
  .focus\:text-neutral-600 {
    &:focus {
      color: var(--color-neutral-600);
    }
  }
  .focus\:shadow-md {
    &:focus {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.05)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, 0.025));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-brand {
    &:focus {
      --tw-ring-color: var(--brand);
    }
  }
  .focus\:ring-brand-500 {
    &:focus {
      --tw-ring-color: var(--color-brand-500);
    }
  }
  .focus\:ring-current {
    &:focus {
      --tw-ring-color: currentcolor;
    }
  }
  .focus\:ring-danger {
    &:focus {
      --tw-ring-color: var(--danger);
    }
  }
  .focus\:ring-neutral-500 {
    &:focus {
      --tw-ring-color: var(--color-neutral-500);
    }
  }
  .focus\:ring-success {
    &:focus {
      --tw-ring-color: var(--success);
    }
  }
  .focus\:ring-warning {
    &:focus {
      --tw-ring-color: var(--warning);
    }
  }
  .focus\:ring-white {
    &:focus {
      --tw-ring-color: var(--color-white);
    }
  }
  .focus\:ring-offset-1 {
    &:focus {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus\:outline-2 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus\:outline-red-500 {
    &:focus {
      outline-color: var(--color-red-500);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-brand {
    &:focus-visible {
      --tw-ring-color: var(--brand);
    }
  }
  .focus-visible\:ring-danger {
    &:focus-visible {
      --tw-ring-color: var(--danger);
    }
  }
  .focus-visible\:ring-info {
    &:focus-visible {
      --tw-ring-color: var(--info);
    }
  }
  .focus-visible\:ring-neutral {
    &:focus-visible {
      --tw-ring-color: var(--neutral);
    }
  }
  .focus-visible\:ring-success {
    &:focus-visible {
      --tw-ring-color: var(--success);
    }
  }
  .focus-visible\:ring-warning {
    &:focus-visible {
      --tw-ring-color: var(--warning);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:scale-\[0\.98\] {
    &:active {
      scale: 0.98;
    }
  }
  .active\:bg-border {
    &:active {
      background-color: var(--border);
    }
  }
  .active\:bg-brand-active {
    &:active {
      background-color: var(--brand-active);
    }
  }
  .active\:bg-danger-active {
    &:active {
      background-color: var(--danger-active);
    }
  }
  .active\:bg-gray-100 {
    &:active {
      background-color: var(--color-gray-100);
    }
  }
  .active\:bg-info-active {
    &:active {
      background-color: var(--info-active);
    }
  }
  .active\:bg-neutral-active {
    &:active {
      background-color: var(--neutral-active);
    }
  }
  .active\:bg-success-active {
    &:active {
      background-color: var(--success-active);
    }
  }
  .active\:bg-warning-active {
    &:active {
      background-color: var(--warning-active);
    }
  }
  .active\:text-gray-500 {
    &:active {
      color: var(--color-gray-500);
    }
  }
  .active\:text-gray-700 {
    &:active {
      color: var(--color-gray-700);
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:bg-brand-disabled {
    &:disabled {
      background-color: var(--brand-disabled);
    }
  }
  .disabled\:bg-danger-disabled {
    &:disabled {
      background-color: var(--danger-disabled);
    }
  }
  .disabled\:bg-info-disabled {
    &:disabled {
      background-color: var(--info-disabled);
    }
  }
  .disabled\:bg-neutral-disabled {
    &:disabled {
      background-color: var(--neutral-disabled);
    }
  }
  .disabled\:bg-success-disabled {
    &:disabled {
      background-color: var(--success-disabled);
    }
  }
  .disabled\:bg-warning-disabled {
    &:disabled {
      background-color: var(--warning-disabled);
    }
  }
  .disabled\:text-neutral-disabled {
    &:disabled {
      color: var(--neutral-disabled);
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .has-\[\:checked\]\:border-brand {
    &:has(*:is(:checked)) {
      border-color: var(--brand);
    }
  }
  .has-\[\:checked\]\:border-danger {
    &:has(*:is(:checked)) {
      border-color: var(--danger);
    }
  }
  .has-\[\:checked\]\:border-neutral-400 {
    &:has(*:is(:checked)) {
      border-color: var(--color-neutral-400);
    }
  }
  .has-\[\:checked\]\:border-success {
    &:has(*:is(:checked)) {
      border-color: var(--success);
    }
  }
  .has-\[\:checked\]\:border-warning {
    &:has(*:is(:checked)) {
      border-color: var(--warning);
    }
  }
  .has-\[\:checked\]\:bg-brand\/5 {
    &:has(*:is(:checked)) {
      background-color: var(--brand);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--brand) 5%, transparent);
      }
    }
  }
  .has-\[\:checked\]\:bg-danger\/5 {
    &:has(*:is(:checked)) {
      background-color: var(--danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--danger) 5%, transparent);
      }
    }
  }
  .has-\[\:checked\]\:bg-neutral-100 {
    &:has(*:is(:checked)) {
      background-color: var(--color-neutral-100);
    }
  }
  .has-\[\:checked\]\:bg-success\/5 {
    &:has(*:is(:checked)) {
      background-color: var(--success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--success) 5%, transparent);
      }
    }
  }
  .has-\[\:checked\]\:bg-warning\/5 {
    &:has(*:is(:checked)) {
      background-color: var(--warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--warning) 5%, transparent);
      }
    }
  }
  .data-\[state\=active\]\:border-foreground {
    &[data-state="active"] {
      border-color: var(--foreground);
    }
  }
  .data-\[state\=active\]\:bg-surface {
    &[data-state="active"] {
      background-color: var(--surface);
    }
  }
  .data-\[state\=active\]\:text-foreground {
    &[data-state="active"] {
      color: var(--foreground);
    }
  }
  .data-\[state\=active\]\:shadow-sm {
    &[data-state="active"] {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .sm\:mb-16 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 16);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:w-3\/4 {
    @media (width >= 40rem) {
      width: calc(3/4 * 100%);
    }
  }
  .sm\:max-w-48 {
    @media (width >= 40rem) {
      max-width: calc(var(--spacing) * 48);
    }
  }
  .sm\:flex-1 {
    @media (width >= 40rem) {
      flex: 1;
    }
  }
  .sm\:flex-nowrap {
    @media (width >= 40rem) {
      flex-wrap: nowrap;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:justify-start {
    @media (width >= 40rem) {
      justify-content: flex-start;
    }
  }
  .sm\:p-14 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 14);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-0 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .sm\:pt-0 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:pt-16 {
    @media (width >= 40rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .sm\:pb-0 {
    @media (width >= 40rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:max-w-64 {
    @media (width >= 48rem) {
      max-width: calc(var(--spacing) * 64);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:opacity-0 {
    @media (width >= 48rem) {
      opacity: 0%;
    }
  }
  .md\:group-hover\:opacity-100 {
    @media (width >= 48rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          opacity: 100%;
        }
      }
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .xl\:w-1\/2 {
    @media (width >= 80rem) {
      width: calc(1/2 * 100%);
    }
  }
  .rtl\:flex-row-reverse {
    [dir="rtl"] &, .rtl & {
      flex-direction: row-reverse;
    }
  }
  .rtl\:peer-checked\:after\:-translate-x-full {
    [dir="rtl"] &, .rtl & {
      &:is(:where(.peer):checked ~ *) {
        &::after {
          content: var(--tw-content);
          --tw-translate-x: -100%;
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .dark\:divide-white\/5 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .dark\:divide-white\/10 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-none {
    &:where(.dark, .dark *) {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .dark\:border-amber-500 {
    &:where(.dark, .dark *) {
      border-color: var(--color-amber-500);
    }
  }
  .dark\:border-amber-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-amber-800);
    }
  }
  .dark\:border-blue-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-600);
    }
  }
  .dark\:border-blue-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-800);
    }
  }
  .dark\:border-emerald-500 {
    &:where(.dark, .dark *) {
      border-color: var(--color-emerald-500);
    }
  }
  .dark\:border-emerald-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-emerald-600);
    }
  }
  .dark\:border-gray-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:border-neutral-500 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-500);
    }
  }
  .dark\:border-neutral-600 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-600);
    }
  }
  .dark\:border-neutral-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-neutral-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:border-rose-500 {
    &:where(.dark, .dark *) {
      border-color: var(--color-rose-500);
    }
  }
  .dark\:border-rose-900 {
    &:where(.dark, .dark *) {
      border-color: var(--color-rose-900);
    }
  }
  .dark\:border-white\/5 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:border-white\/8 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 8%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 8%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:border-white\/20 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:border-white\/\[9\%\] {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 9%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 9%, transparent);
      }
    }
  }
  .dark\:bg-\[\#1a1a1a\] {
    &:where(.dark, .dark *) {
      background-color: #1a1a1a;
    }
  }
  .dark\:bg-amber-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-amber-600);
    }
  }
  .dark\:bg-amber-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-amber-950);
    }
  }
  .dark\:bg-blue-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-700);
    }
  }
  .dark\:bg-blue-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-950);
    }
  }
  .dark\:bg-brand-900\/20 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(0.367 0.098 49.72) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-brand-900) 20%, transparent);
      }
    }
  }
  .dark\:bg-emerald-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-emerald-600);
    }
  }
  .dark\:bg-emerald-900\/70 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(37.8% 0.077 168.94) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-900) 70%, transparent);
      }
    }
  }
  .dark\:bg-gray-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:bg-gray-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-gray-900);
    }
  }
  .dark\:bg-neutral-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-400);
    }
  }
  .dark\:bg-neutral-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-600);
    }
  }
  .dark\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-neutral-900\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(0.272 0.014 261.29) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
      }
    }
  }
  .dark\:bg-rose-600 {
    &:where(.dark, .dark *) {
      background-color: var(--color-rose-600);
    }
  }
  .dark\:bg-rose-900\! {
    &:where(.dark, .dark *) {
      background-color: var(--color-rose-900) !important;
    }
  }
  .dark\:bg-rose-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-rose-950);
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:bg-white {
    &:where(.dark, .dark *) {
      background-color: var(--color-white);
    }
  }
  .dark\:bg-white\/1 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 1%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 1%, transparent);
      }
    }
  }
  .dark\:bg-white\/3 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 3%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 3%, transparent);
      }
    }
  }
  .dark\:bg-white\/5 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .dark\:bg-white\/10 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-white\/\[2\%\] {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
      }
    }
  }
  .dark\:bg-white\/\[3\%\] {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 3%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 3%, transparent);
      }
    }
  }
  .dark\:text-amber-300 {
    &:where(.dark, .dark *) {
      color: var(--color-amber-300);
    }
  }
  .dark\:text-blue-300 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
  }
  .dark\:text-brand-300 {
    &:where(.dark, .dark *) {
      color: var(--color-brand-300);
    }
  }
  .dark\:text-brand-400 {
    &:where(.dark, .dark *) {
      color: var(--color-brand-400);
    }
  }
  .dark\:text-danger-400 {
    &:where(.dark, .dark *) {
      color: var(--color-danger-400);
    }
  }
  .dark\:text-emerald-400 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-400);
    }
  }
  .dark\:text-emerald-500 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-500);
    }
  }
  .dark\:text-gray-300 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-gray-600 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-600);
    }
  }
  .dark\:text-info-400 {
    &:where(.dark, .dark *) {
      color: var(--color-info-400);
    }
  }
  .dark\:text-neutral-100 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-100);
    }
  }
  .dark\:text-neutral-200 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-300 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-300);
    }
  }
  .dark\:text-neutral-400 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-neutral-600 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-600);
    }
  }
  .dark\:text-neutral-600\! {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-600) !important;
    }
  }
  .dark\:text-neutral-900 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-900);
    }
  }
  .dark\:text-rose-100 {
    &:where(.dark, .dark *) {
      color: var(--color-rose-100);
    }
  }
  .dark\:text-success-400 {
    &:where(.dark, .dark *) {
      color: var(--color-success-400);
    }
  }
  .dark\:text-warning-400 {
    &:where(.dark, .dark *) {
      color: var(--color-warning-400);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:ring-neutral-800 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-neutral-800);
    }
  }
  .group-hover\:dark\:text-emerald-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          color: var(--color-emerald-500);
        }
      }
    }
  }
  .dark\:peer-focus\:ring-green-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-green-800);
      }
    }
  }
  .dark\:peer-focus\:ring-orange-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-orange-800);
      }
    }
  }
  .dark\:peer-focus\:ring-purple-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-purple-800);
      }
    }
  }
  .dark\:peer-focus\:ring-red-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-red-800);
      }
    }
  }
  .dark\:peer-focus\:ring-teal-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-teal-800);
      }
    }
  }
  .dark\:peer-focus\:ring-yellow-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):focus ~ *) {
        --tw-ring-color: var(--color-yellow-800);
      }
    }
  }
  .dark\:hover\:border-neutral-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-neutral-600);
        }
      }
    }
  }
  .dark\:hover\:bg-brand-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(0.367 0.098 49.72) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-brand-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-danger-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(0.350 0.1 26.533) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-danger-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-info-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(0.373 0.094 240.75) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-info-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-success-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(0.373 0.094 142.5) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-success-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-warning-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(0.385 0.094 67.69) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-warning-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/2 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 2%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/5 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-white\/10 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
          }
        }
      }
    }
  }
  .hover\:dark\:bg-white\/5 {
    &:hover {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-gray-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-300);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-100 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-100);
        }
      }
    }
  }
  .hover\:dark\:text-white {
    &:hover {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:focus\:border-blue-700 {
    &:where(.dark, .dark *) {
      &:focus {
        border-color: var(--color-blue-700);
      }
    }
  }
  .dark\:focus\:border-blue-800 {
    &:where(.dark, .dark *) {
      &:focus {
        border-color: var(--color-blue-800);
      }
    }
  }
  .dark\:focus\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:focus {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .dark\:active\:bg-gray-700 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: var(--color-gray-700);
      }
    }
  }
  .dark\:active\:text-gray-300 {
    &:where(.dark, .dark *) {
      &:active {
        color: var(--color-gray-300);
      }
    }
  }
  .dark\:has-\[\:checked\]\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:has(*:is(:checked)) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .\[\&_\.line\]\:block {
    & .line {
      display: block;
    }
  }
  .\[\&_\.line\]\:px-4 {
    & .line {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.line\]\:py-1 {
    & .line {
      padding-block: calc(var(--spacing) * 1);
    }
  }
  .\[\&_\.line\]\:odd\:bg-white\/2 {
    & .line {
      &:nth-child(odd) {
        background-color: color-mix(in srgb, #fff 2%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
        }
      }
    }
  }
  .\[\&_\.line\]\:even\:bg-white {
    & .line {
      &:nth-child(even) {
        background-color: var(--color-white);
      }
    }
  }
  .\[\&_\.line\]\:odd\:dark\:bg-white\/4 {
    & .line {
      &:nth-child(odd) {
        &:where(.dark, .dark *) {
          background-color: color-mix(in srgb, #fff 4%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
          }
        }
      }
    }
  }
  .\[\&_\.line\]\:even\:dark\:bg-white\/2 {
    & .line {
      &:nth-child(even) {
        &:where(.dark, .dark *) {
          background-color: color-mix(in srgb, #fff 2%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
          }
        }
      }
    }
  }
  .\[\&_\.line-number\]\:dark\:text-white\! {
    & .line-number {
      &:where(.dark, .dark *) {
        color: var(--color-white) !important;
      }
    }
  }
  .\[\&_svg\]\:size-2\.5 {
    & svg {
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
  }
  .\[\&_svg\]\:\!text-white {
    & svg {
      color: var(--color-white) !important;
    }
  }
  .hover\:\[\&_svg\]\:stroke-emerald-500 {
    &:hover {
      @media (hover: hover) {
        & svg {
          stroke: var(--color-emerald-500);
        }
      }
    }
  }
  .dark\:\[\&_svg\]\:\!text-white {
    &:where(.dark, .dark *) {
      & svg {
        color: var(--color-white) !important;
      }
    }
  }
  .\[\&_tbody_tr\]\:hover\:bg-body {
    & tbody tr {
      &:hover {
        @media (hover: hover) {
          background-color: var(--body);
        }
      }
    }
  }
  .\[\&_tbody_tr\:nth-child\(odd\)\]\:bg-body {
    & tbody tr:nth-child(odd) {
      background-color: var(--body);
    }
  }
  .\[\&\:\:-webkit-inner-spin-button\]\:appearance-none {
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
              appearance: none;
    }
  }
  .\[\&\:\:-webkit-outer-spin-button\]\:appearance-none {
    &::-webkit-outer-spin-button {
      -webkit-appearance: none;
              appearance: none;
    }
  }
  .\[\&\:not\(\:has\(\.hidden\)\)\]\:mt-3 {
    &:not(:has(.hidden)) {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .\[\&\[data-accordion\]\]\:overflow-hidden {
    &[data-accordion] {
      overflow: hidden;
    }
  }
}
@layer components {
  .quill-editor {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:focus-within {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-within {
      --tw-ring-color: var(--brand);
    }
    &:focus-within {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .quill-container {
    overflow: hidden;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
  }
  .quill-container-xs {
    border-radius: var(--radius-sm);
  }
  .quill-container-sm {
    border-radius: var(--radius-md);
  }
  .quill-container-md {
    border-radius: var(--radius-md);
  }
  .quill-container-lg {
    border-radius: var(--radius-lg);
  }
  .quill-container-xl {
    border-radius: var(--radius-lg);
  }
  .quill-editor-disabled {
    cursor: not-allowed;
    opacity: 50%;
  }
  .quill-editor-disabled .quill-container {
    pointer-events: none;
  }
  .quill-editor-disabled .ql-toolbar {
    pointer-events: none;
  }
  .quill-editor-error .quill-container {
    border-color: var(--danger);
  }
  .quill-editor-error:focus-within {
    --tw-ring-color: var(--danger);
  }
  .quill-editor-error .ql-toolbar {
    border-bottom-color: var(--danger);
  }
  .quill-editor-loading {
    position: relative;
  }
  .quill-editor-loading .quill-container {
    pointer-events: none;
  }
  .quill-editor-loading .ql-toolbar {
    pointer-events: none;
  }
  .quill-editor-loading::after {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    background-color: var(--surface);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--surface) 50%, transparent);
    }
    --tw-backdrop-blur: blur(var(--blur-sm));
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    content: '';
    z-index: 10;
  }
  .quill-editor-loading .loading-container {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 11;
  }
  .quill-editor .ql-toolbar {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
  }
  .quill-editor-xs .ql-toolbar {
    padding: calc(var(--spacing) * 1);
  }
  .quill-editor-sm .ql-toolbar {
    padding: calc(var(--spacing) * 2);
  }
  .quill-editor-md .ql-toolbar {
    padding: calc(var(--spacing) * 2);
  }
  .quill-editor-lg .ql-toolbar {
    padding: calc(var(--spacing) * 3);
  }
  .quill-editor-xl .ql-toolbar {
    padding: calc(var(--spacing) * 3);
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-toolbar {
      padding: calc(var(--spacing) * 2);
    }
    .quill-editor-sm .ql-toolbar {
      padding: calc(var(--spacing) * 2.5);
    }
    .quill-editor-md .ql-toolbar {
      padding: calc(var(--spacing) * 3);
    }
    .quill-editor-lg .ql-toolbar {
      padding: calc(var(--spacing) * 3.5);
    }
    .quill-editor-xl .ql-toolbar {
      padding: calc(var(--spacing) * 4);
    }
    .quill-editor .ql-toolbar {
      flex-wrap: wrap;
    }
  }
  @media (max-width: 480px) {
    .quill-editor-xs .ql-toolbar {
      padding: calc(var(--spacing) * 1.5);
    }
    .quill-editor-sm .ql-toolbar {
      padding: calc(var(--spacing) * 2);
    }
    .quill-editor-md .ql-toolbar {
      padding: calc(var(--spacing) * 2);
    }
    .quill-editor-lg .ql-toolbar {
      padding: calc(var(--spacing) * 2.5);
    }
    .quill-editor-xl .ql-toolbar {
      padding: calc(var(--spacing) * 3);
    }
  }
  .quill-editor .ql-container {
    background-color: var(--surface);
    color: var(--foreground);
    border: none;
    font-family: inherit;
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
  }
  .quill-editor .ql-editor {
    background-color: transparent;
    color: var(--foreground);
    line-height: 1.6;
    min-height: inherit;
    border: none;
  }
  .quill-editor-xs .ql-editor {
    padding: calc(var(--spacing) * 2);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .quill-editor-sm .ql-editor {
    padding: calc(var(--spacing) * 3);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .quill-editor-md .ql-editor {
    padding: calc(var(--spacing) * 3);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .quill-editor-lg .ql-editor {
    padding: calc(var(--spacing) * 4);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .quill-editor-xl .ql-editor {
    padding: calc(var(--spacing) * 4);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-editor {
      padding: calc(var(--spacing) * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .quill-editor-sm .ql-editor {
      padding: calc(var(--spacing) * 3);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .quill-editor-md .ql-editor {
      padding: calc(var(--spacing) * 3.5);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .quill-editor-lg .ql-editor {
      padding: calc(var(--spacing) * 4);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .quill-editor-xl .ql-editor {
      padding: calc(var(--spacing) * 4.5);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .quill-editor .ql-editor {
      line-height: 1.7;
    }
  }
  @media (max-width: 480px) {
    .quill-editor-xs .ql-editor {
      padding: calc(var(--spacing) * 2);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .quill-editor-sm .ql-editor {
      padding: calc(var(--spacing) * 2.5);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .quill-editor-md .ql-editor {
      padding: calc(var(--spacing) * 3);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .quill-editor-lg .ql-editor {
      padding: calc(var(--spacing) * 3.5);
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .quill-editor-xl .ql-editor {
      padding: calc(var(--spacing) * 4);
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .quill-editor .ql-toolbar button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-sm);
    color: var(--foreground);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        background-color: var(--surface);
      }
    }
    &:active {
      background-color: var(--border);
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--brand);
    }
    &:focus-visible {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    padding: 0;
    border: none;
    background: transparent;
    margin: 0;
  }
  .quill-editor-xs .ql-toolbar button {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 5);
  }
  .quill-editor-sm .ql-toolbar button {
    height: calc(var(--spacing) * 6);
    width: calc(var(--spacing) * 6);
  }
  .quill-editor-md .ql-toolbar button {
    height: calc(var(--spacing) * 7);
    width: calc(var(--spacing) * 7);
  }
  .quill-editor-lg .ql-toolbar button {
    height: calc(var(--spacing) * 8);
    width: calc(var(--spacing) * 8);
  }
  .quill-editor-xl .ql-toolbar button {
    height: calc(var(--spacing) * 9);
    width: calc(var(--spacing) * 9);
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-toolbar button {
      height: calc(var(--spacing) * 7);
      width: calc(var(--spacing) * 7);
    }
    .quill-editor-sm .ql-toolbar button {
      height: calc(var(--spacing) * 8);
      width: calc(var(--spacing) * 8);
    }
    .quill-editor-md .ql-toolbar button {
      height: calc(var(--spacing) * 9);
      width: calc(var(--spacing) * 9);
    }
    .quill-editor-lg .ql-toolbar button {
      height: calc(var(--spacing) * 10);
      width: calc(var(--spacing) * 10);
    }
    .quill-editor-xl .ql-toolbar button {
      height: calc(var(--spacing) * 11);
      width: calc(var(--spacing) * 11);
    }
    .quill-editor .ql-toolbar button {
      min-width: 44px;
      min-height: 44px;
    }
  }
  .quill-editor .ql-toolbar button:hover {
    background-color: var(--surface);
  }
  .quill-editor .ql-toolbar button.ql-active {
    background-color: var(--brand);
    color: var(--foreground-brand);
  }
  .quill-editor .ql-toolbar button svg {
    fill: currentcolor;
  }
  .quill-editor-xs .ql-toolbar button svg {
    height: calc(var(--spacing) * 3);
    width: calc(var(--spacing) * 3);
  }
  .quill-editor-sm .ql-toolbar button svg {
    height: calc(var(--spacing) * 3.5);
    width: calc(var(--spacing) * 3.5);
  }
  .quill-editor-md .ql-toolbar button svg {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
  }
  .quill-editor-lg .ql-toolbar button svg {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
  }
  .quill-editor-xl .ql-toolbar button svg {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 5);
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-toolbar button svg {
      height: calc(var(--spacing) * 3.5);
      width: calc(var(--spacing) * 3.5);
    }
    .quill-editor-sm .ql-toolbar button svg {
      height: calc(var(--spacing) * 4);
      width: calc(var(--spacing) * 4);
    }
    .quill-editor-md .ql-toolbar button svg {
      height: calc(var(--spacing) * 4.5);
      width: calc(var(--spacing) * 4.5);
    }
    .quill-editor-lg .ql-toolbar button svg {
      height: calc(var(--spacing) * 5);
      width: calc(var(--spacing) * 5);
    }
    .quill-editor-xl .ql-toolbar button svg {
      height: calc(var(--spacing) * 5.5);
      width: calc(var(--spacing) * 5.5);
    }
  }
  .quill-editor .ql-toolbar .ql-formats {
    margin-right: 0;
  }
  .quill-editor-xs .ql-toolbar .ql-formats {
    margin-right: calc(var(--spacing) * 1.5);
  }
  .quill-editor-sm .ql-toolbar .ql-formats {
    margin-right: calc(var(--spacing) * 2);
  }
  .quill-editor-md .ql-toolbar .ql-formats {
    margin-right: calc(var(--spacing) * 2);
  }
  .quill-editor-lg .ql-toolbar .ql-formats {
    margin-right: calc(var(--spacing) * 3);
  }
  .quill-editor-xl .ql-toolbar .ql-formats {
    margin-right: calc(var(--spacing) * 3);
  }
  .quill-editor .ql-toolbar .ql-formats:last-child {
    margin-right: 0;
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 2);
    }
    .quill-editor-sm .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 2.5);
    }
    .quill-editor-md .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 3);
    }
    .quill-editor-lg .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 3.5);
    }
    .quill-editor-xl .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 4);
    }
    .quill-editor .ql-toolbar .ql-formats {
      margin-bottom: calc(var(--spacing) * 1);
    }
  }
  @media (max-width: 480px) {
    .quill-editor-xs .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 1.5);
    }
    .quill-editor-sm .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 2);
    }
    .quill-editor-md .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 2);
    }
    .quill-editor-lg .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 2.5);
    }
    .quill-editor-xl .ql-toolbar .ql-formats {
      margin-right: calc(var(--spacing) * 3);
    }
  }
  .quill-editor .ql-toolbar .ql-picker {
    color: var(--foreground);
  }
  .quill-editor .ql-toolbar .ql-picker-label {
    --tw-border-style: none;
    border-style: none;
    color: var(--foreground);
    height: inherit;
    line-height: inherit;
  }
  .quill-editor-xs .ql-toolbar .ql-picker-label {
    padding-inline: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .quill-editor-sm .ql-toolbar .ql-picker-label {
    padding-inline: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .quill-editor-md .ql-toolbar .ql-picker-label {
    padding-inline: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .quill-editor-lg .ql-toolbar .ql-picker-label {
    padding-inline: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .quill-editor-xl .ql-toolbar .ql-picker-label {
    padding-inline: calc(var(--spacing) * 2);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .quill-editor .ql-toolbar .ql-picker-options {
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, 0.05)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, 0.025));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    z-index: 1000;
  }
  .quill-editor .ql-toolbar .ql-picker-item {
    &:hover {
      @media (hover: hover) {
        background-color: var(--surface);
      }
    }
  }
  .quill-editor .ql-toolbar .ql-picker-item.ql-selected {
    background-color: var(--brand);
    color: var(--foreground-brand);
  }
  .quill-editor .ql-editor.ql-blank::before {
    color: var(--muted);
    font-style: normal;
  }
  .quill-editor .ql-editor p {
    color: var(--foreground);
    margin: 0.5rem 0;
    font-size: inherit;
  }
  .quill-editor .ql-editor blockquote {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    border-color: var(--border);
    padding-left: calc(var(--spacing) * 4);
    color: var(--muted);
    font-style: italic;
    margin: 1rem 0;
    font-size: inherit;
  }
  .quill-editor .ql-editor ul, .quill-editor .ql-editor ol {
    margin: 0.5rem 0;
    padding-left: 1.5rem;
    font-size: inherit;
  }
  .quill-editor .ql-editor li {
    color: var(--foreground);
    margin: 0.25rem 0;
    font-size: inherit;
  }
  .quill-editor .ql-editor a {
    color: var(--brand);
    text-decoration-line: underline;
    &:hover {
      @media (hover: hover) {
        opacity: 80%;
      }
    }
  }
  .quill-editor .ql-editor strong {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .quill-editor .ql-editor em {
    font-style: italic;
  }
  .quill-editor-xs .ql-editor h1 {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
    line-height: 1.3;
    margin: 0.75rem 0 0.25rem 0;
  }
  .quill-editor-xs .ql-editor h2 {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.5rem 0 0.25rem 0;
  }
  .quill-editor-xs .ql-editor h3 {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.5rem 0 0.125rem 0;
  }
  .quill-editor-sm .ql-editor h1 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
    line-height: 1.3;
    margin: 0.75rem 0 0.375rem 0;
  }
  .quill-editor-sm .ql-editor h2 {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.625rem 0 0.25rem 0;
  }
  .quill-editor-sm .ql-editor h3 {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.5rem 0 0.25rem 0;
  }
  .quill-editor-md .ql-editor h1 {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
    line-height: 1.2;
    margin: 1rem 0 0.5rem 0;
  }
  .quill-editor-md .ql-editor h2 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.3;
    margin: 0.75rem 0 0.375rem 0;
  }
  .quill-editor-md .ql-editor h3 {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.625rem 0 0.25rem 0;
  }
  .quill-editor-lg .ql-editor h1 {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
    line-height: 1.2;
    margin: 1.25rem 0 0.625rem 0;
  }
  .quill-editor-lg .ql-editor h2 {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.3;
    margin: 1rem 0 0.5rem 0;
  }
  .quill-editor-lg .ql-editor h3 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 0.75rem 0 0.375rem 0;
  }
  .quill-editor-xl .ql-editor h1 {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--foreground);
    line-height: 1.2;
    margin: 1.5rem 0 0.75rem 0;
  }
  .quill-editor-xl .ql-editor h2 {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.3;
    margin: 1.25rem 0 0.625rem 0;
  }
  .quill-editor-xl .ql-editor h3 {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--foreground);
    line-height: 1.4;
    margin: 1rem 0 0.5rem 0;
  }
  @media (max-width: 768px) {
    .quill-editor-lg .ql-editor h1 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .quill-editor-lg .ql-editor h2 {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .quill-editor-lg .ql-editor h3 {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .quill-editor-xl .ql-editor h1 {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .quill-editor-xl .ql-editor h2 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .quill-editor-xl .ql-editor h3 {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .quill-editor .ql-snow .ql-stroke {
    stroke: currentColor;
  }
  .quill-editor .ql-snow .ql-fill {
    fill: currentColor;
  }
  .quill-editor .ql-snow .ql-stroke.ql-thin {
    stroke: currentColor;
    opacity: 0.7;
  }
  .quill-editor .ql-tooltip {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    color: var(--foreground);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .quill-editor .ql-tooltip::before {
    border-bottom-color: var(--surface);
  }
  .quill-editor .ql-tooltip input[type=text] {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--input);
    color: var(--foreground);
  }
  .quill-editor .ql-tooltip input[type=text]:focus {
    border-color: var(--brand);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
  }
  .quill-editor .ql-tooltip a.ql-preview {
    color: var(--brand);
  }
  .quill-editor .ql-tooltip a.ql-action::after, .quill-editor .ql-tooltip a.ql-remove::before {
    color: var(--foreground);
  }
  .quill-editor .ql-picker.ql-expanded .ql-picker-options {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .quill-editor .ql-picker-options .ql-picker-item {
    color: var(--foreground);
  }
  .quill-editor .ql-picker-options .ql-picker-item:hover {
    background-color: var(--border);
  }
  .quill-editor .ql-picker-options .ql-picker-item.ql-selected {
    background-color: var(--brand);
    color: var(--foreground-brand);
  }
  .quill-editor .ql-editor ::-moz-selection {
    background-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--brand) 20%, transparent);
    }
  }
  .quill-editor .ql-editor ::selection {
    background-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--brand) 20%, transparent);
    }
  }
  .quill-editor .ql-editor pre.ql-syntax {
    background-color: var(--border);
    color: var(--foreground);
  }
  .quill-editor .ql-editor blockquote {
    border-left-color: var(--border);
  }
  .quill-editor .ql-editor .ql-video, .quill-editor .ql-editor img {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
  }
  .quill-editor .ql-editor a {
    color: var(--brand);
    text-decoration-color: var(--brand);
    @supports (color: color-mix(in lab, red, red)) {
      text-decoration-color: color-mix(in oklab, var(--brand) 30%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        text-decoration-color: var(--brand);
      }
    }
  }
  .quill-editor .ql-editor .ql-formula {
    background-color: var(--border);
    color: var(--foreground);
  }
  .quill-editor .ql-clipboard {
    background-color: var(--surface);
    color: var(--foreground);
  }
  .quill-editor.ql-snow .ql-tooltip[data-mode=link]::before {
    content: "Visit URL:";
  }
  .quill-editor.ql-snow .ql-tooltip[data-mode=formula]::before {
    content: "Enter formula:";
  }
  .quill-editor.ql-snow .ql-tooltip[data-mode=video]::before {
    content: "Enter video:";
  }
  .quill-editor .ql-toolbar button:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--surface);
    --tw-outline-style: none;
    outline-style: none;
  }
  .quill-editor .ql-toolbar .ql-picker-label:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--surface);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (prefers-color-scheme: dark) {
    .quill-editor .ql-toolbar {
      border-bottom-color: var(--color-border);
    }
    .quill-editor .ql-container {
      border-color: var(--color-border);
    }
    .quill-editor .ql-toolbar button:disabled {
      opacity: 40%;
    }
  }
  .quill-editor-disabled .ql-toolbar button {
    cursor: not-allowed;
    opacity: 50%;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  .quill-editor .ql-editor:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--surface);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (prefers-contrast: high) {
    .quill-editor .ql-toolbar button {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--foreground);
    }
    .quill-editor .ql-toolbar button.ql-active {
      background-color: var(--foreground);
      color: var(--surface);
    }
    .quill-editor .ql-container {
      border-style: var(--tw-border-style);
      border-width: 2px;
      border-color: var(--foreground);
    }
  }
  @media (prefers-reduced-motion: reduce) {
    .quill-editor .ql-toolbar button {
      transition: none;
    }
    .quill-editor {
      transition: none;
    }
  }
  .quill-editor .ql-toolbar {
    position: relative;
  }
  .quill-editor .ql-toolbar:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--surface);
  }
  .quill-editor .ql-toolbar button:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--surface);
    z-index: 1;
  }
  [data-quill-live-region] {
    position: absolute !important;
    left: -10000px !important;
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
  }
  .quill-editor .ql-bubble .ql-toolbar {
    display: none;
  }
  .quill-editor .ql-bubble .ql-tooltip {
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    backdrop-filter: blur(8px);
    z-index: 1000;
  }
  .quill-editor .ql-bubble .ql-tooltip.ql-editing {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
  }
  .quill-editor .ql-bubble .ql-tooltip button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--foreground);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        background-color: var(--border);
      }
    }
    &:active {
      background-color: var(--border);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--border) 80%, transparent);
      }
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--brand);
    }
    &:focus-visible {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    background: transparent;
    border: none;
    padding: 0;
  }
  .quill-editor-xs .ql-bubble .ql-tooltip button {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 5);
  }
  .quill-editor-sm .ql-bubble .ql-tooltip button {
    height: calc(var(--spacing) * 6);
    width: calc(var(--spacing) * 6);
  }
  .quill-editor-md .ql-bubble .ql-tooltip button {
    height: calc(var(--spacing) * 7);
    width: calc(var(--spacing) * 7);
  }
  .quill-editor-lg .ql-bubble .ql-tooltip button {
    height: calc(var(--spacing) * 8);
    width: calc(var(--spacing) * 8);
  }
  .quill-editor-xl .ql-bubble .ql-tooltip button {
    height: calc(var(--spacing) * 9);
    width: calc(var(--spacing) * 9);
  }
  .quill-editor .ql-bubble .ql-tooltip button svg {
    fill: currentcolor;
  }
  .quill-editor-xs .ql-bubble .ql-tooltip button svg {
    height: calc(var(--spacing) * 3);
    width: calc(var(--spacing) * 3);
  }
  .quill-editor-sm .ql-bubble .ql-tooltip button svg {
    height: calc(var(--spacing) * 3.5);
    width: calc(var(--spacing) * 3.5);
  }
  .quill-editor-md .ql-bubble .ql-tooltip button svg {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
  }
  .quill-editor-lg .ql-bubble .ql-tooltip button svg {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
  }
  .quill-editor-xl .ql-bubble .ql-tooltip button svg {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 5);
  }
  .quill-editor .ql-bubble .ql-tooltip button.ql-active {
    background-color: var(--brand);
    color: var(--foreground-brand);
  }
  .quill-editor .ql-bubble .ql-tooltip input[type=text] {
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--input);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    color: var(--foreground);
  }
  .quill-editor .ql-bubble .ql-tooltip input[type=text]:focus {
    border-color: var(--brand);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--brand);
    --tw-outline-style: none;
    outline-style: none;
  }
  .quill-editor .ql-bubble .ql-tooltip a.ql-preview {
    color: var(--brand);
    &:hover {
      @media (hover: hover) {
        color: var(--brand-hover);
      }
    }
  }
  .quill-editor .ql-bubble .ql-tooltip a.ql-action, .quill-editor .ql-bubble .ql-tooltip a.ql-remove {
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        color: var(--brand);
      }
    }
  }
  .quill-editor .ql-bubble .ql-tooltip::before {
    border-top-color: var(--surface);
  }
  .quill-editor .ql-bubble .ql-picker {
    color: var(--foreground);
  }
  .quill-editor .ql-bubble .ql-picker-label {
    --tw-border-style: none;
    border-style: none;
    color: var(--foreground);
  }
  .quill-editor .ql-bubble .ql-picker-options {
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--surface);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, 0.06)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, 0.03));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .quill-editor .ql-bubble .ql-picker-item {
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--border);
      }
    }
  }
  .quill-editor .ql-bubble .ql-picker-item.ql-selected {
    background-color: var(--brand);
    color: var(--foreground-brand);
  }
  @media (max-width: 768px) {
    .quill-editor-xs .ql-bubble .ql-tooltip button {
      height: calc(var(--spacing) * 7);
      width: calc(var(--spacing) * 7);
    }
    .quill-editor-sm .ql-bubble .ql-tooltip button {
      height: calc(var(--spacing) * 8);
      width: calc(var(--spacing) * 8);
    }
    .quill-editor-md .ql-bubble .ql-tooltip button {
      height: calc(var(--spacing) * 9);
      width: calc(var(--spacing) * 9);
    }
    .quill-editor .ql-bubble .ql-tooltip {
      padding: calc(var(--spacing) * 2);
    }
  }
  @media (prefers-color-scheme: dark) {
    .quill-editor .ql-bubble .ql-tooltip {
      backdrop-filter: blur(12px);
      border-color: var(--color-border);
    }
    .quill-editor .ql-bubble .ql-tooltip::before {
      border-top-color: var(--color-surface);
    }
  }
}
@media print {
  .quill-editor .ql-toolbar, .quill-editor .ql-tooltip {
    display: none;
  }
  .quill-editor .ql-container {
    border: none;
    border-radius: 0;
  }
  [data-quill-live-region] {
    display: none !important;
  }
}
:root {
  color-scheme: light dark;
  --surface: light-dark(white, var(--color-neutral-900));
  --body: light-dark(var(--color-neutral-50), var(--color-neutral-950));
  --foreground: light-dark(var(--color-neutral-900), var(--color-neutral-100));
  --border: light-dark(var(--color-neutral-200), var(--color-neutral-800));
  --input: light-dark(var(--color-neutral-50), var(--color-neutral-950));
  --muted: light-dark(var(--color-neutral-600), var(--color-neutral-400));
  --brand: light-dark(var(--color-brand-500), var(--color-brand-400));
  --brand-hover: light-dark(var(--color-brand-600), var(--color-brand-300));
  --brand-active: light-dark(var(--color-brand-700), var(--color-brand-200));
  --brand-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-brand: white;
  --danger: light-dark(var(--color-danger-500), var(--color-danger-400));
  --danger-hover: light-dark(var(--color-danger-600), var(--color-danger-300));
  --danger-active: light-dark(var(--color-danger-700), var(--color-danger-200));
  --danger-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-danger: white;
  --warning: light-dark(var(--color-warning-500), var(--color-warning-400));
  --warning-hover: light-dark(var(--color-warning-600), var(--color-warning-300));
  --warning-active: light-dark(var(--color-warning-700), var(--color-warning-200));
  --warning-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-warning: light-dark(var(--color-neutral-900), var(--color-neutral-900));
  --success: light-dark(var(--color-success-500), var(--color-success-400));
  --success-hover: light-dark(var(--color-success-600), var(--color-success-300));
  --success-active: light-dark(var(--color-success-700), var(--color-success-200));
  --success-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-success: white;
  --info: light-dark(var(--color-info-500), var(--color-info-400));
  --info-hover: light-dark(var(--color-info-600), var(--color-info-300));
  --info-active: light-dark(var(--color-info-700), var(--color-info-200));
  --info-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-info: white;
  --neutral: light-dark(var(--color-neutral-500), var(--color-neutral-400));
  --neutral-hover: light-dark(var(--color-neutral-600), var(--color-neutral-300));
  --neutral-active: light-dark(var(--color-neutral-700), var(--color-neutral-200));
  --neutral-disabled: light-dark(var(--color-neutral-300), var(--color-neutral-700));
  --foreground-neutral: white;
  --color-surface-inverse: light-dark(var(--color-neutral-900), white);
  --color-border-inverse: light-dark(var(--color-neutral-700), var(--color-neutral-200));
  --tooltip-dark-bg: light-dark(var(--color-neutral-900), var(--color-neutral-800));
}
* {
  scrollbar-width: thin;
  scrollbar-color: light-dark(var(--color-neutral-300), var(--color-neutral-600)) transparent;
}
*::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
*::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 3px;
}
*::-webkit-scrollbar-thumb {
  background: light-dark(var(--color-neutral-300), var(--color-neutral-600));
  border-radius: 3px;
  -webkit-transition: background-color 0.2s ease;
  transition: background-color 0.2s ease;
}
*::-webkit-scrollbar-thumb:hover {
  background: light-dark(var(--color-neutral-400), var(--color-neutral-500));
}
*::-webkit-scrollbar-thumb:active {
  background: light-dark(var(--color-neutral-500), var(--color-neutral-400));
}
*::-webkit-scrollbar-corner {
  background: transparent;
}
.scrollbar-thin,
[data-select-options] {
  scrollbar-width: thin;
  scrollbar-color: light-dark(var(--color-neutral-400), var(--color-neutral-500)) transparent;
}
.scrollbar-thin::-webkit-scrollbar,
[data-select-options]::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}
.scrollbar-thin::-webkit-scrollbar-thumb,
[data-select-options]::-webkit-scrollbar-thumb {
  background: light-dark(var(--color-neutral-400), var(--color-neutral-500));
  border-radius: 2px;
}
.scrollbar-thin::-webkit-scrollbar-thumb:hover,
[data-select-options]::-webkit-scrollbar-thumb:hover {
  background: light-dark(var(--color-neutral-500), var(--color-neutral-400));
}
.scrollbar-hide {
  scrollbar-width: none;
}
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}
.scrollbar-thick {
  scrollbar-width: auto;
  scrollbar-color: light-dark(var(--color-neutral-300), var(--color-neutral-600)) light-dark(var(--color-neutral-100), var(--color-neutral-800));
}
.scrollbar-thick::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}
.scrollbar-thick::-webkit-scrollbar-track {
  background: light-dark(var(--color-neutral-100), var(--color-neutral-800));
  border-radius: 6px;
}
.scrollbar-thick::-webkit-scrollbar-thumb {
  background: light-dark(var(--color-neutral-300), var(--color-neutral-600));
  border-radius: 6px;
  border: 2px solid light-dark(var(--color-neutral-100), var(--color-neutral-800));
}
.scrollbar-thick::-webkit-scrollbar-thumb:hover {
  background: light-dark(var(--color-neutral-400), var(--color-neutral-500));
}
.gallery-slide {
  z-index: 1;
  transition: opacity 0.3s ease-in-out;
}
.gallery-slide.active {
  z-index: 2;
}
.gallery-thumbnail.active {
  border-color: var(--color-brand-500);
  transform: scale(1.05);
}
.gallery-thumbnail:hover {
  transform: scale(1.02);
}
.gallery-thumbnail:focus {
  outline: 2px solid var(--color-brand-500);
  outline-offset: 2px;
}
.gallery-navigation button:hover {
  background-color: rgba(255, 255, 255, 0.95);
}
.gallery-autoplay-controls .play-icon.show,
.gallery-autoplay-controls .pause-icon.show {
  display: block;
}
.gallery-autoplay-controls .play-icon.hide,
.gallery-autoplay-controls .pause-icon.hide {
  display: none;
}
@media (max-width: 768px) {
  .gallery-navigation button {
    width: 2.5rem;
    height: 2.5rem;
  }
  .gallery-thumbnails {
    gap: 0.5rem;
  }
  .gallery-thumbnail {
    width: 3rem;
    height: 3rem;
  }
}
.gallery-ecommerce .gallery-main {
  min-height: 400px;
}
.gallery-container:has(.gallery-thumbnails) .gallery-main-container {
  flex: 1;
}
[data-gallery-type="thumbnail"] .gallery-thumbnails {
  max-width: 100%;
  overflow-x: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}
[data-gallery-type="thumbnail"] .gallery-thumbnails::-webkit-scrollbar {
  display: none;
}
[data-gallery="true"]:focus {
  outline: 2px solid var(--color-brand-500);
  outline-offset: 2px;
}
.gallery-image-loading {
  position: relative;
}
.gallery-image-loading::before {
  content: '';
  position: absolute;
  inset: 0;
  background: var(--color-surface);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
}
.gallery-image-loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2rem;
  height: 2rem;
  margin: -1rem 0 0 -1rem;
  border: 2px solid var(--color-neutral-200);
  border-top-color: var(--color-brand-500);
  border-radius: 50%;
  animation: gallery-spin 1s linear infinite;
  z-index: 11;
}
.gallery-image-error {
  position: relative;
}
.gallery-error-placeholder {
  z-index: 10;
}
.gallery-thumbnail-error {
  position: relative;
}
.gallery-thumbnail-error-placeholder {
  z-index: 10;
}
@keyframes gallery-spin {
  to {
    transform: rotate(360deg);
  }
}
:root {
  --direction-factor: 1;
  --text-align-start: left;
  --text-align-end: right;
}
[dir="rtl"], .rtl {
  --direction-factor: -1;
  --text-align-start: right;
  --text-align-end: left;
}
[dir="rtl"] .input-field-container,
.rtl .input-field-container {
  direction: rtl;
}
[dir="rtl"] .input-field-container input,
.rtl .input-field-container input {
  text-align: right;
}
[dir="rtl"] .input-field-container .absolute.left-2,
.rtl .input-field-container .absolute.left-2 {
  left: auto;
  right: 0.5rem;
}
[dir="rtl"] .input-field-container .absolute.right-2,
.rtl .input-field-container .absolute.right-2 {
  right: auto;
  left: 0.5rem;
}
[dir="rtl"] .button-with-icon .icon-left,
.rtl .button-with-icon .icon-left {
  margin-left: 0.5rem;
  margin-right: 0;
}
[dir="rtl"] .button-with-icon .icon-right,
.rtl .button-with-icon .icon-right {
  margin-right: 0.5rem;
  margin-left: 0;
}
[dir="rtl"] [data-dropdown-panel],
.rtl [data-dropdown-panel] {
  direction: rtl;
}
[dir="rtl"] [data-submenu-panel],
.rtl [data-submenu-panel] {
  direction: rtl;
}
[dir="rtl"] table,
.rtl table {
  direction: rtl;
}
[dir="rtl"] th,
.rtl th {
  text-align: right;
}
[dir="rtl"] td,
.rtl td {
  text-align: right;
}
[dir="rtl"] .form-field,
.rtl .form-field {
  direction: rtl;
}
[dir="rtl"] .form-field input,
.rtl .form-field input,
[dir="rtl"] .form-field textarea,
.rtl .form-field textarea,
[dir="rtl"] .form-field select,
.rtl .form-field select {
  text-align: right;
}
[dir="rtl"] .checkbox-container,
.rtl .checkbox-container,
[dir="rtl"] .radio-container,
.rtl .radio-container {
  flex-direction: row-reverse;
}
[dir="rtl"] .checkbox-container label,
.rtl .checkbox-container label,
[dir="rtl"] .radio-container label,
.rtl .radio-container label {
  margin-left: 0;
  margin-right: 0.5rem;
}
[dir="rtl"] .select-container,
.rtl .select-container {
  direction: rtl;
}
[dir="rtl"] .select-dropdown,
.rtl .select-dropdown {
  text-align: right;
}
[dir="rtl"] .select-option,
.rtl .select-option {
  text-align: right;
}
[dir="rtl"] .toast-container,
.rtl .toast-container {
  direction: rtl;
}
[dir="rtl"] .alert-container,
.rtl .alert-container {
  direction: rtl;
}
[dir="rtl"] .modal-content,
.rtl .modal-content {
  direction: rtl;
}
[dir="rtl"] .calendar-container,
.rtl .calendar-container {
  direction: rtl;
}
[dir="rtl"] .calendar-grid,
.rtl .calendar-grid {
  direction: ltr;
}
[dir="rtl"] .calendar-header,
.rtl .calendar-header {
  flex-direction: row-reverse;
}
[dir="rtl"] .gallery-container,
.rtl .gallery-container {
  direction: rtl;
}
[dir="rtl"] .gallery-grid,
.rtl .gallery-grid {
  direction: rtl;
}
[dir="rtl"] .file-upload-container,
.rtl .file-upload-container {
  direction: rtl;
}
[dir="rtl"] .file-preview-list,
.rtl .file-preview-list {
  direction: rtl;
}
[dir="rtl"] .breadcrumb-container,
.rtl .breadcrumb-container {
  direction: rtl;
  flex-direction: row-reverse;
}
[dir="rtl"] .breadcrumb-separator,
.rtl .breadcrumb-separator {
  transform: scaleX(-1);
}
[dir="rtl"] .tabs-container,
.rtl .tabs-container {
  direction: rtl;
}
[dir="rtl"] .tab-list,
.rtl .tab-list {
  direction: rtl;
}
[dir="rtl"] .progress-bar,
.rtl .progress-bar {
  direction: rtl;
}
[dir="rtl"] .progress-fill,
.rtl .progress-fill {
  transform-origin: right center;
}
.rtl .ms-auto {
  margin-left: auto !important;
  margin-right: 0 !important;
}
.rtl .me-auto {
  margin-right: auto !important;
  margin-left: 0 !important;
}
.rtl .ps-auto {
  padding-left: auto !important;
  padding-right: 0 !important;
}
.rtl .pe-auto {
  padding-right: auto !important;
  padding-left: 0 !important;
}
.rtl .text-start {
  text-align: right !important;
}
.rtl .text-end {
  text-align: left !important;
}
.rtl .float-start {
  float: right !important;
}
.rtl .float-end {
  float: left !important;
}
.rtl .rtl-flip {
  transform: scaleX(-1);
}
.ltr-only {
  display: block;
}
.rtl-only {
  display: none;
}
[dir="rtl"] .ltr-only,
.rtl .ltr-only {
  display: none;
}
[dir="rtl"] .rtl-only,
.rtl .rtl-only {
  display: block;
}
@keyframes slideInFromRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slideInFromLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
[dir="rtl"] .slide-in-start,
.rtl .slide-in-start {
  animation: slideInFromRight 0.3s ease-out;
}
[dir="rtl"] .slide-in-end,
.rtl .slide-in-end {
  animation: slideInFromLeft 0.3s ease-out;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-divide-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}


